/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
import java.sql.*;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author msiti
 */
public class PanelFormCust extends javax.swing.JPanel {

    /**
     * Creates new form PanelFormCust
     */
    public PanelFormCust() {
        initComponents();
        showData();
    }

    private void showData() {
        DefaultTableModel model = (DefaultTableModel) tblCust.getModel();
        model.setRowCount(0); // Menghapus semua baris yang ada di tabel

        String sql = "SELECT ID_Pelanggan, Nama_Perusahaan, Nama_PIC, Jabatan, No_Telepon, Email, Alamat, Bidang_Proyek FROM data.Customer";

        try (Connection conn = koneksi.getKoneksi(); // Menggunakan koneksi dari class koneksi.java
             PreparedStatement pstmt = conn.prepareStatement(sql);
             ResultSet rs = pstmt.executeQuery()) {

            while (rs.next()) {
                model.addRow(new Object[]{
                    rs.getString("ID_Pelanggan"),
                    rs.getString("Nama_Perusahaan"),
                    rs.getString("Nama_PIC"),
                    rs.getString("Jabatan"),
                    rs.getString("No_Telepon"),
                    rs.getString("Email"),
                    rs.getString("Alamat"),
                    rs.getString("Bidang_Proyek")
                });
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error memuat data customer: " + e.getMessage(), "Database Error", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }
    }
    
    private void kosong() {
        txtIdPelanggan.setText("");
        txtNamaPerusahaan.setText("");
        txtNamaPIC.setText("");
        txtJabatan.setText("");
        txtNoTelepon.setText("");
        txtEmail.setText("");
        txtAlamat.setText("");
        txtBidangProyek.setText("");
        txtIdPelanggan.setEditable(true);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtNamaPerusahaan = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtIdPelanggan = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtJabatan = new javax.swing.JTextField();
        txtNamaPIC = new javax.swing.JTextField();
        txtNoTelepon = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        txtAlamat = new javax.swing.JTextArea();
        txtBidangProyek = new javax.swing.JTextField();
        save = new javax.swing.JButton();
        edit = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblCust = new javax.swing.JTable();

        setOpaque(false);

        txtNamaPerusahaan.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel11.setText("Jabatan");

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel9.setText("ID Pelanggan");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel7.setText("Kontak Personal");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setText("Alamat");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel8.setText("Nama Perusahaan");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("Bidang Proyek");

        txtIdPelanggan.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel6.setText("No. Telepon");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setText("Email");

        txtJabatan.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N

        txtNamaPIC.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N

        txtNoTelepon.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N

        txtEmail.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N

        txtAlamat.setColumns(20);
        txtAlamat.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        txtAlamat.setRows(5);
        txtAlamat.setMaximumSize(new java.awt.Dimension(232, 92));
        txtAlamat.setMinimumSize(new java.awt.Dimension(232, 92));

        save.setBackground(new java.awt.Color(152, 124, 12));
        save.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        save.setText("SIMPAN");
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });

        edit.setBackground(new java.awt.Color(152, 124, 12));
        edit.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        edit.setText("EDIT");
        edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editActionPerformed(evt);
            }
        });

        delete.setBackground(new java.awt.Color(152, 124, 12));
        delete.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        delete.setText("HAPUS");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        jScrollPane3.setBackground(new java.awt.Color(152, 124, 12));

        tblCust.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        tblCust.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID Pelanggan", "Nama Perusaan", "Kontak Personal", "Jabatan", "No Telepon", "Email", "Alamat", "Bidang Proyek"
            }
        ));
        tblCust.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblCustMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tblCust);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(20, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtNoTelepon, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtIdPelanggan, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txtNamaPerusahaan)
                                        .addComponent(txtNamaPIC, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(txtJabatan, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(50, 50, 50)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 162, Short.MAX_VALUE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(txtBidangProyek, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtAlamat, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtEmail))
                                .addContainerGap(32, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(76, 76, 76)
                        .addComponent(save, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(100, 100, 100)
                        .addComponent(edit, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(100, 100, 100)
                        .addComponent(delete, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(93, 93, 93))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtIdPelanggan, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jLabel8)
                                .addGap(30, 30, 30)
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(34, 34, 34)
                                .addComponent(jLabel11))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtNamaPerusahaan, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(20, 20, 20)
                                .addComponent(txtNamaPIC, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(20, 20, 20)
                                .addComponent(txtJabatan, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtNoTelepon, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jLabel6))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(44, 44, 44)
                                .addComponent(jLabel4))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtAlamat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtBidangProyek, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(save, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(edit, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(delete, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 6, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed
        String idPelanggan = txtIdPelanggan.getText();
        String namaPerusahaan = txtNamaPerusahaan.getText();
        String namaPIC = txtNamaPIC.getText();
        String jabatan = txtJabatan.getText();
        String noTelepon = txtNoTelepon.getText();
        String email = txtEmail.getText();
        String alamat = txtAlamat.getText();
        String bidangProyek = txtBidangProyek.getText();

        // Validasi input
        if (idPelanggan.isEmpty() || namaPerusahaan.isEmpty() || namaPIC.isEmpty() || jabatan.isEmpty() || noTelepon.isEmpty() || email.isEmpty() || alamat.isEmpty() || bidangProyek.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Semua field harus diisi!", "Input Error", JOptionPane.WARNING_MESSAGE);
            return;
        }

        String sql = "INSERT INTO data.Customer (ID_Pelanggan, Nama_Perusahaan, Nama_PIC, Jabatan, No_Telepon, Email, Alamat, Bidang_Proyek) VALUES (?, ?, ?, ?, ?, ?, ?, ?)";
        try (Connection conn = koneksi.getKoneksi();
             PreparedStatement pstmt = conn.prepareStatement(sql)) {

            pstmt.setString(1, idPelanggan);
            pstmt.setString(2, namaPerusahaan);
            pstmt.setString(3, namaPIC);
            pstmt.setString(4, jabatan);
            pstmt.setString(5, noTelepon);
            pstmt.setString(6, email);
            pstmt.setString(7, alamat);
            pstmt.setString(8, bidangProyek);

            int affectedRows = pstmt.executeUpdate();
            if (affectedRows > 0) {
                JOptionPane.showMessageDialog(this, "Data customer berhasil ditambahkan!");
                showData(); // Muat ulang data setelah penambahan
                kosong();   // Bersihkan field input
            }

        } catch (SQLException e) {
            if (e.getMessage().contains("Duplicate entry") && e.getMessage().contains("for key 'PRIMARY'")) {
                JOptionPane.showMessageDialog(this, "ID Pelanggan sudah ada. Gunakan ID lain.", "Input Error", JOptionPane.WARNING_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, "Error menambahkan data customer: " + e.getMessage(), "Database Error", JOptionPane.ERROR_MESSAGE);
            }
            e.printStackTrace();
        }
    }//GEN-LAST:event_saveActionPerformed

    private void editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editActionPerformed
       String idPelanggan = txtIdPelanggan.getText();
        String namaPerusahaan = txtNamaPerusahaan.getText();
        String namaPIC = txtNamaPIC.getText();
        String jabatan = txtJabatan.getText();
        String noTelepon = txtNoTelepon.getText();
        String email = txtEmail.getText();
        String alamat = txtAlamat.getText();
        String bidangProyek = txtBidangProyek.getText();

        if (idPelanggan.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Pilih data di tabel atau masukkan ID Pelanggan yang akan diedit.", "Input Error", JOptionPane.WARNING_MESSAGE);
            return;
        }
        // Validasi input: pastikan semua field terisi untuk update
        if (namaPerusahaan.isEmpty() || namaPIC.isEmpty() || jabatan.isEmpty() || noTelepon.isEmpty() || email.isEmpty() || alamat.isEmpty() || bidangProyek.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Semua field harus diisi untuk mengedit!", "Input Error", JOptionPane.WARNING_MESSAGE);
            return;
        }

        String sql = "UPDATE data.Customer SET Nama_Perusahaan = ?, Nama_PIC = ?, Jabatan = ?, No_Telepon = ?, Email = ?, Alamat = ?, Bidang_Proyek = ? WHERE ID_Pelanggan = ?";
        try (Connection conn = koneksi.getKoneksi();
             PreparedStatement pstmt = conn.prepareStatement(sql)) {

            pstmt.setString(1, namaPerusahaan);
            pstmt.setString(2, namaPIC);
            pstmt.setString(3, jabatan);
            pstmt.setString(4, noTelepon);
            pstmt.setString(5, email);
            pstmt.setString(6, alamat);
            pstmt.setString(7, bidangProyek);
            pstmt.setString(8, idPelanggan); // WHERE clause

            int affectedRows = pstmt.executeUpdate();
            if (affectedRows > 0) {
                JOptionPane.showMessageDialog(this, "Data customer berhasil diupdate!");
                showData(); // Muat ulang data setelah update
                kosong();   // Bersihkan field input
            } else {
                JOptionPane.showMessageDialog(this, "ID Pelanggan tidak ditemukan.", "Update Error", JOptionPane.WARNING_MESSAGE);
            }

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error mengupdate data customer: " + e.getMessage(), "Database Error", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }
    }//GEN-LAST:event_editActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        String idPelanggan = txtIdPelanggan.getText();

        if (idPelanggan.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Pilih data di tabel atau masukkan ID Pelanggan yang akan dihapus.", "Input Error", JOptionPane.WARNING_MESSAGE);
            return;
        }

        // Konfirmasi penghapusan
        int confirm = JOptionPane.showConfirmDialog(this, "Anda yakin ingin menghapus data ini?", "Konfirmasi Hapus", JOptionPane.YES_NO_OPTION);
        if (confirm == JOptionPane.NO_OPTION) {
            return;
        }

        String sql = "DELETE FROM data.Customer WHERE ID_Pelanggan = ?";
        try (Connection conn = koneksi.getKoneksi();
             PreparedStatement pstmt = conn.prepareStatement(sql)) {

            pstmt.setString(1, idPelanggan);

            int affectedRows = pstmt.executeUpdate();
            if (affectedRows > 0) {
                JOptionPane.showMessageDialog(this, "Data customer berhasil dihapus!");
                showData(); // Muat ulang data setelah penghapusan
                kosong();   // Bersihkan field input
            } else {
                JOptionPane.showMessageDialog(this, "ID Pelanggan tidak ditemukan.", "Delete Error", JOptionPane.WARNING_MESSAGE);
            }

        } catch (SQLException e) {
            // Perhatian: jika ada transaksi yang masih terhubung ke customer ini (foreign key),
            // maka akan muncul error di sini. Anda bisa menambahkan penanganan error spesifik.
            if (e.getMessage().contains("Cannot delete or update a parent row: a foreign key constraint fails")) {
                 JOptionPane.showMessageDialog(this, "Tidak dapat menghapus customer ini karena masih terhubung dengan data Transaksi Customer. Hapus data Transaksi terkait terlebih dahulu.", "Penghapusan Gagal", JOptionPane.ERROR_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, "Error menghapus data customer: " + e.getMessage(), "Database Error", JOptionPane.ERROR_MESSAGE);
            }
            e.printStackTrace();
        }
    }//GEN-LAST:event_deleteActionPerformed

    private void tblCustMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblCustMouseClicked
       int selectedRow = tblCust.getSelectedRow();
        if (selectedRow >= 0) {
            DefaultTableModel model = (DefaultTableModel) tblCust.getModel();
            txtIdPelanggan.setText(model.getValueAt(selectedRow, 0).toString());
            txtNamaPerusahaan.setText(model.getValueAt(selectedRow, 1).toString());
            txtNamaPIC.setText(model.getValueAt(selectedRow, 2).toString());
            txtJabatan.setText(model.getValueAt(selectedRow, 3).toString());
            txtNoTelepon.setText(model.getValueAt(selectedRow, 4).toString());
            txtEmail.setText(model.getValueAt(selectedRow, 5).toString());
            txtAlamat.setText(model.getValueAt(selectedRow, 6).toString());
            txtBidangProyek.setText(model.getValueAt(selectedRow, 7).toString());
            txtIdPelanggan.setEditable(false); // ID Pelanggan tidak bisa diedit saat mode edit
        }
    }//GEN-LAST:event_tblCustMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton delete;
    private javax.swing.JButton edit;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JButton save;
    private javax.swing.JTable tblCust;
    private javax.swing.JTextArea txtAlamat;
    private javax.swing.JTextField txtBidangProyek;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtIdPelanggan;
    private javax.swing.JTextField txtJabatan;
    private javax.swing.JTextField txtNamaPIC;
    private javax.swing.JTextField txtNamaPerusahaan;
    private javax.swing.JTextField txtNoTelepon;
    // End of variables declaration//GEN-END:variables
}
